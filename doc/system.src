\chapter{The Harmony System}

{\em Under construction.}

\section{Running Harmony}

\begin{itemize}
\item command-line arguments \label{sec:cmdlineargs}
\item \verb|FOCALPATH| \label{sec:focalpath}
\item encoding keys \label{sec:encodingkeys}
\end{itemize}

\section{Running the Web Demos Locally}

If you want to build new demos and make them available on the web for others
to play with, you'll need to run the demo script on your own web server.
The basic steps are as follows:

\begin{enumerate}
\item 

* Start a local webserver and make sure it can serve PHP pages.  On 
OSX, for example, it can be done something like this.  First, edit the web
server configuration file
#&   sudo emacs /private/etc/httpd/httpd.conf
and uncomment two lines involving PHP.

Now put a symlink from the web server's default location to wherever you
keep your personal web space.
#&   sudo mv /Library/WebServer/Documents /Library/WebServer/Documents.orig
#&   sudo ln -s ~/pub /Library/WebServer/Documents

Next, restart the web server by toggling ``Personal web sharing'' control in the
``Sharing''  system preference panel.

\item  Make a symlink to your harmony directory from somewhere in your web
space:
#&ln -s ~/current/harmony ~/pub

\item Point your browser to \verb|http://localhost/harmony/html/demobody.php|
and see if the usual demo page gets displayed.

\item Put your demos in a new subdirectory (say, @mydemo@) under
@harmony/examples@.  This directory should definitely contain a file
@demos.php@ and an executable file @harmonize-mydemos@ --- see the existing
subdirectories of @examples@ to see how this is done.

\item Edit @harmony/html/demobody.php@, search for @get_demos_from@, and add a line
#&get_demos_from("mydemo");
to what's already there.  
\end{enumerate}

\section{Navigating the Distribution}

If you want to check out the code, here is one reasonable order to look at the
files:   

\begin{tabular}{ll}
@src/v.mli@                   &        basic definitions of trees \\
@src/lens.mli@                   &     basic definitions of lenses\\
@src/lib/native/prelude.ml@      &     the most important primitive lenses\\
@src/lib/lenses/prelude.fcl@     &     some important derived lenses\\
@examples/*@                   &       lots of real-world lenses\\
@src/sync.ml@                   &      the synchronization algorithm\\
@src/harmony.ml@                   &   the top-level program\\
\end{tabular}

\finish{This section should also talk about how to add things (primitive
  lenses, viewers, etc.)}