module Diff3 = 

(* Unit tests for list synchronization *)

let a : view = {a}
let b : view = {b}
let c : view = {c}
let d : view = {d}
let e : view = {e}
let f : view = {f}
let g : view = {g}
let x : view = {x}
let y : view = {y}
let A : view = {A}
let B : view = {B}
let C : view = {C}
let D : view = {D}
let E : view = {E}

let good (t:view) : view =
  {O = t, A = t, B = t}

(* First example, showing funny off-by-one printing bug *)
sync with id at (List.T Value)
  { O = [a,b,c,d,e],
    A = [D,b,C,d,e],
    B = [E,b,c,d,E], log }
  = 
   ?

(* More complex example, also illustrating a funny behavior (why is there a change
   action listed for 'c'?) *)
sync with id at (List.T Value)
  { O = [a,b,c,d,e,f,g],
    A = [x,b,x,x,c,d,e,f,g],
    B = [y,b,c,f,g], log }
  = 
   ?

(*
sync with id at (List.T Any)
  { O = [a,b,c],
    A = [a,b,C],
    B = [A,b,c] }
  = 
  ?
*)
 
sync with id at (List.T Any)
  { O = [{a={x=A,y=B}}],
    A = [{a={x=C,y=B}}],
    B = [{a={x=A,y=D}}] }
  = 
  { A = [{a = {x = {C}, y = {D}}}],
    B = [{a = {x = {C}, y = {D}}}],
    O = [{a = {x = {C}, y = {D}}}]}
 
sync with id at (List.T Any)
  { O = [a,b,c,d],
    A = [a,B,c,d],
    B = [a,b,c,D] }
  = 
  good [a,B,c,D]
 
sync with id at (List.T Any)
  { O = [a,b,c],
    A = [a,b,c,d],
    B = [x,a,b,c] }
  = 
  good [x,a,b,c,d]
 
sync with id at (List.T Any)
  { O = [a,a],
    A = [a,b],
    B = [a,c] }
  = 
  { O = [a,a],
    A = [a,b],
    B = [a,c] }
 
