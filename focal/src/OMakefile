##############################################################################
# Library configuration

OCAMLPACKS += netstring unix str pxp pxp-engine pxp-lex-utf8

OCAML_LIBS += \
  $(UBASEDIR)/ubase \
  $(HBASEDIR)/hbase \
  $(GENEPIDIR)/genepi \
  $(CSVDIR)/csv

OCAMLINCLUDES += \
  $(UBASEDIR) \
  $(HBASEDIR) \
  $(EXTERNDIR)/genepi/ocaml \
  $(EXTERNDIR)/ocaml-csv-1.0.3 \
  $(SRCDIR) \
  $(LENSESDIR)

##############################################################################
# Main results

RESULT = harmony 
RESULTS = harmony.cmxa $(RESULT)$(EXE)

.DEFAULT: $(BINDIR)/$(RESULT)$(EXE)

##############################################################################
# Sources 

BASE_SOURCES[] = \
    unittest.mli unittest.ml \
    db.mli db.ml tree.ml tree.mli v.mli v.ml \
    lens.mli lens.ml \
    csvdb.mli csvdb.ml treedb.mli treedb.ml \
    surveyor.mli surveyor.ml \
    syntax.mli syntax.ml parser.mly lexer.mli lexer.mll \
    presburger.mli presburger.ml \
    treeschema.mli treeschema.ml dbschema.mli dbschema.ml \
    schema.mli schema.ml \
    value.mli value.ml bakery.ml \
    registry.mli registry.ml \
    diff3.mli diff3.ml sync.mli sync.ml \
    compiler.mli compiler.ml \
    viewers.ml

NATIVE_LENS_SOURCES[] = \
    prelude.ml relational.ml 

TOPLEVEL_SOURCES = \
    toplevel.ml 

GENERATED_SOURCES_BARE = \
    parser.ml parser.mli parser.mly lexer.mll lexer.ml bakery.ml 

GENERATED_SOURCES = $(addprefix $(SRCDIR)/, $(GENERATED_SOURCES_BARE))

COMMON_SOURCES[] =
    $(addprefix $(SRCDIR)/, $(BASE_SOURCES))
    $(addprefix $(LENSESDIR)/, $(NATIVE_LENS_SOURCES))
    $(addprefix $(SRCDIR)/, $(TOPLEVEL_SOURCES))
COMMON_SOURCES = $(file $(COMMON_SOURCES))

SOURCES = $(COMMON_SOURCES) $(file $(SRCDIR)/harmony.ml)

OCamlLibrary($(RESULT), $(rootname $(COMMON_SOURCES)))
OCamlProgram($(RESULT), $(rootname $(SOURCES)))

$(BINDIR)/$(RESULT)$(EXE): $(RESULT)$(EXE)
	if $(not $(file-exists $(BINDIR)))
		mkdir $(BINDIR)
	cp $< $@

##############################################################################
# Helper tools

# If we are installing Harmony elsewhere, then we need to build a real
# bakery.ml embedding all the focal files we might need.  But if we're
# only going to run things in place, we can skip this step and avoid
# recompiling Harmony whenever .fcl files change in the examples.
if $(defined BAKE)
  $(SRCDIR)/bakery.ml: $(TOOLSDIR)/baker$(EXE) $(FCLFILES)
    $< $(EXAMPLESDIR) $(LENSESDIR) > $@
else
  $(SRCDIR)/bakery.ml: $(TOOLSDIR)/baker$(EXE)
    ./$< > $@

##############################################################################
# Override scanner for external libraries

$(EXTERNDIR)/genepi/ocaml/genepi.cma:
	$(MAKE) -C $(EXTERNDIR)/genepi/ocaml/
$(EXTERNDIR)/genepi/ocaml/genepi.a:
	$(MAKE) -C $(EXTERNDIR)/genepi/ocaml/
$(EXTERNDIR)/genepi/ocaml/genepi.cmx:
	$(MAKE) -C $(EXTERNDIR)/genepi/ocaml/
$(EXTERNDIR)/genepi/ocaml/genepi.cmxa:
	$(MAKE) -C $(EXTERNDIR)/genepi/ocaml/
$(EXTERNDIR)/genepi/ocaml/genepiLibrary.cmx:
	$(MAKE) -C $(EXTERNDIR)/genepi/ocaml/
$(EXTERNDIR)/genepi/ocaml/genepiLibrary.o:
	$(MAKE) -C $(EXTERNDIR)/genepi/ocaml/

$(EXTERNDIR)/ocaml-csv-1.0.3/csv.a:
	$(MAKE) -C $(EXTERNDIR)/ocaml-csv-1.0.3
$(EXTERNDIR)/ocaml-csv-1.0.3/csv.cmxa:
	$(MAKE) -C $(EXTERNDIR)/ocaml-csv-1.0.3
$(EXTERNDIR)/ocaml-csv-1.0.3/csv.cmx:
	$(MAKE) -C $(EXTERNDIR)/ocaml-csv-1.0.3
$(EXTERNDIR)/ocaml-csv-1.0.3/csv.cmi:
	$(MAKE) -C $(EXTERNDIR)/ocaml-csv-1.0.3
$(EXTERNDIR)/ocaml-csv-1.0.3/csv.o:
	$(MAKE) -C $(EXTERNDIR)/ocaml-csv-1.0.3

##############################################################################
# Miscellaneous

clean:
	$(CLEAN) $(RESULTS) $(GENERATED_SOURCES_BARE) baker bakery.cmo

test: $(RESULT)$(EXE)
  ./$(RESULT)$(EXE) -unittests

