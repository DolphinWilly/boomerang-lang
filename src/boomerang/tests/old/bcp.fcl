#{*}
let ws = del /[ \t\n]*/ 
let wsp = del /[ \t\n]+/ 
let do_field (x:string) (l:lens) (post:string) = ws . del x . ws . del "=" . ws . del "{" . l . del "}," . ins post
let del_field (x:string) (r:regexp) = ws . del x . ws . del "=" . ws . del "{" . del r . del "}," 
let del_month = ws . del "month" . ws . del "=" . ws . del /[a-z]{3}/ . ws . del "," . ins "\n"

let any = /[a-zA-Z. ]*/
let author = / (`any* - (`any . \ and\  . `any) (\ )) / 
let authors = "" | / `any* - and (\ ) / | /`any*/ . del "and" . /`any*/

. (wsp . del " and " . wsp . author)*


test authors get "Benjamin C. Pierce and J. Nathan Foster" ---> ?

match _ with 
  del "@InProceedings{" . 
  ins "KEY      : " . 
     key /[^,]*/ . "," <-> "\n" . 
  ins "AUTHOR(S): " . 
     ws . do_field "author" authors "\n" . 
  ins "TITLE    : " . 
     ws . do_field "title" /[^}]*/ "\n" . 
  ws . del_field "booktitle" /[^}]*/ . 
  ws . del_field "year" /[^}]*/ . 
  ws . del_month .
  ws . del_field "pages" /[^}]*/ . 
  ws . del "}"
default
"@InProceedings{unknown,
|    author = {},
|    title = {},
|    booktitle = {},
|    year = {},
|    month = jan,
|    pages = {},
|}"

test do_field "author" author "\n" get "author =    {John L. Doe}," ---> ?


let bibtex = [_]

## test
bibtex.get 
"@InProceedings{DoeSmithBibTeX08,
|  author =    {John L. Doe and Barry Smith},
|  title =     {Transforming BibTeX Using String Transducers},
|  booktitle = {ACM Workshop on Lens Programming (WBDP), Philadelphia, PA},
|  year =      {2008},
|  month =     dec,
|  pages =     {56--68},
|}" ---> ?

#{@}
*)

default _ = "UNKNOWN"

let N = "[a-zA-Z ]*"
let E = "[a-zA-Z@\\.]*"

(* 
  ( "jan" <-> "January" 
  | "feb" <-> "February" 
  | "mar" <-> "March" 
  | "apr" <-> "April" 
  | "may" <-> "May" 
  | "jun" <-> "June" 
  | "jul" <-> "July" 
  | "aug" <-> "August" 
  | "sep" <-> "September" 
  | "oct" <-> "October" 
  | "nov" <-> "November" 
  | "dec" <-> "December") *)

(*
  @InProceedings{DoeSmithBibTeX08,
    author =    {John L. Doe and Barry Smith},
    title =     {Transforming BibTeX Using String Transducers},
    booktitle = {ACM Workshop on Lens Programming (WBDP), Philadelphia, PA},
    year =      {2008},
    month =     dec,
    pages =     {56--68},
  }

-->

  <entry id="DoeSmithBibTeX08">
    <inproceedings>
      <author>John L. Doe</author>
      <author>Barry Smith</author>
      <title>Transforming BibTeX using String Transducers</title>
      <booktitle>ACM Workshop on Lens Programming (WBDP), Philadelphia, PA</booktitle>
      <year>2008</year>
      <pages>56--68</pages>
      <month>December</month>
    </inproceedings>
  </entry>
*)  

(* Comments:
      - The fact that whitespace must be rigid in the abstract view is a
        bit annoying.  It would be nicer to ignore whitespace in the XML
        view completely.

      - The similarity between the title and booktitle elements would be
        easy to deal with if we could abstract over lenses as in Focal.

   To think about:
      - How to make whitespace treatment on the concrete side more flexible
      - nesting braces
      - how to deal with titles containing < symbols
*)   

let id = "[-a-zA-Z0-9&]*"

let body =
  erase "{" .
  copy "[^<}]*" .
  erase "}"

let indent = delete "[ ]*" "" 

let equals = delete "[ ]*" " " . erase "=" . delete "[ ]*" " " 

let title =
  indent .
  rename "title" "    <title>" .
  equals .
  body .
  insert "</title>" 

let oneauthor =
  insert "    <author>" .
  copy "[a-zA-Z., ]*" .  (* WANT: [a-zA-Z., ]* \ ' and ' *)
  insert "<author>"

let author = 
  indent .
  erase "author" . equals . erase "{" .
(* WANT: " *)
(*  ( oneauthor | oneauthor . (erase " and " . oneauthor)* ) . *)
  ( oneauthor | oneauthor . insert "\n" . (erase "&" . oneauthor)* ) .
  erase "}" 

let newline = (copy "\n" | insert "\n")

let comma = erase ","
let commaopt = (erase "," | erase "")

let InProceedings =
  rename "@InProceedings{" "<entry id=\"" .
  key id .
  insert "\">\n  <inproceedings>" . comma . newline . 
  author . comma . newline . 
  title . commaopt . newline . 
  rename "}" "  </inproceedings>\n</entry>"

let entry =
  keyscope (
    <delete "[^@]*" "" .
     InProceedings >
  )

let entries =
   (entry . delete "[\n]*" "\n\n" . insert "\n") *

test entries \
  "<entry id=\"DoeSmithBibTeX08\">
   |  <inproceedings>
   |    <author>John L. Doe, esq.<author>
   |    <author>Barry Smith<author>
   |    <title>Transforming BibTeX Using String Transducers</title>
   |  </inproceedings>
   |</entry>
   |"

   "The wrong comment
   |@InProceedings{FooBar07,
   |  author = {Foo&Bar},
   |  title = {Some other article}
   |}
   |
   |The right comment
   |@InProceedings{DoeSmithBibTeX08,
   |  author =     {John L. Doe&Barry Smith},
   |  title  =     {Transforming BibTeX Using String Transducers}
   |}"
 = ?
   
