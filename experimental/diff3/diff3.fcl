module Diff3 = 

(* Unit tests for list synchronization *)

let a : tree = {a}
let b : tree = {b}
let c : tree = {c}
let d : tree = {d}
let x : tree = {x}
let A : tree = {A}
let B : tree = {B}
let C : tree = {C}
let D : tree = {D}

let good (t:tree) : tree =
  {O = t, A = t, B = t}

sync with id at (List.T Any)
  { O = [a,a],
    A = [a,b],
    B = [a,c], log }
  = 
   ?

(*
sync with id at (List.T Any)
  { O = [a,b,c],
    A = [a,b,C],
    B = [A,b,c] }
  = 
  ?
*)
 
sync with id at (List.T Any)
  { O = [{a={x=A,y=B}}],
    A = [{a={x=C,y=B}}],
    B = [{a={x=A,y=D}}] }
  = 
  { A = [{a = {x = {C}, y = {D}}}],
    B = [{a = {x = {C}, y = {D}}}],
    O = [{a = {x = {C}, y = {D}}}]}
 
sync with id at (List.T Any)
  { O = [a,b,c,d],
    A = [a,B,c,d],
    B = [a,b,c,D] }
  = 
  good [a,B,c,D]
 
sync with id at (List.T Any)
  { O = [a,b,c],
    A = [a,b,c,d],
    B = [x,a,b,c] }
  = 
  good [x,a,b,c,d]
 
sync with id at (List.T Any)
  { O = [a,a],
    A = [a,b],
    B = [a,c] }
  = 
  { O = [a,a],
    A = [a,b],
    B = [a,c] }
 
