module Plist =

open List

let plist_object_lens : lens =
  wmap { "dict" -> dict_lens,
         "array" -> array_lens,
         "string" -> leaf_lens }

(* What I want to write:
and array_lens : lens =
  hoist "";
  list_map plist_object_lens

and dict_lens : lens =
  hoist "";
  groupby2;
  list_map (keypair_lens)
*)

(* What I have to write: *)
and array_lens : lens =
  wmap {"" -> list_map plist_object_lens};
  hoist ""

and dict_lens : lens =
  wmap {"" -> groupby2; list_map (keypair_lens)};
  hoist ""

and keypair_lens : lens =
  wmap { "*h" -> hoist "key"; leaf_lens, 
         "*t" -> wmap {"*h" -> plist_object_lens } }

and leaf_lens : lens =
  hoist "";
  acond <[]> < { "*t"=[], "*h"={"PCDATA" = {"BLANK"={}, *\"BLANK"=Any}}} >
   (const [{"PCDATA"="BLANK"}] {})
   id;
  hd [];
  hoist "PCDATA"

let plist_lens =
  hoist "";
  hd [];
  hoist "plist";
  focus "" {};
  hd [];
  plist_object_lens



