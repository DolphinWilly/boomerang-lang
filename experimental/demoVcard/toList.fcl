module ToList = 

let to_list1 (m:name): lens =
  acond ({`m = Any, * = Any}) ({`List.HD = Any, `List.TL = Any, * = Any})
  (rename m List.HD; add List.TL [])
  ( add List.NIL {} )

let to_list2 (m:name) (n:name) : lens =
  xfork {`m} {`List.HD}
    (plunge List.HD; wmap{`List.HD -> to_list1 m})
    (plunge List.HD; wmap{`List.HD -> to_list1 n}; 
     add List.TL []; plunge List.TL)

let to_list3 (m:name) (n:name) (k:name) : lens =
  xfork {`m} {`List.HD}
    (plunge List.HD; wmap{`List.HD -> to_list1 m})
    (plunge List.TL; wmap{`List.TL -> to_list2 n k})

let to_list4 (n1:name) (n2:name) (n3:name) (n4:name) : lens =
  xfork {`n1} {`List.HD}
    (plunge List.HD; wmap{`List.HD -> to_list1 n1 } )
    (plunge List.TL; wmap{`List.TL -> to_list3 n2 n3 n4 } )

let to_list5 (n1:name) (n2:name) (n3:name) (n4: name) (n5: name) : lens =
  xfork {`n1} {`List.HD}
    (plunge List.HD; wmap{`List.HD -> to_list1 n1 } )
    (plunge List.TL; wmap{`List.TL -> to_list4 n2 n3 n4 n5} )

let to_list6 (n1:name) (n2:name) (n3:name) 
             (n4:name) (n5:name) (n6: name) : lens =
  xfork {`n1} {`List.HD}
    (plunge List.HD; wmap{`List.HD -> to_list1 n1 } )
    (plunge List.TL; wmap{`List.TL -> to_list5 n2 n3 n4 n5 n6 } )

let to_list7 (n1:name) (n2:name) (n3:name) 
             (n4:name) (n5:name) (n6: name) (n7: name) : lens =
  xfork {`n1} {`List.HD}
    (plunge List.HD; wmap{`List.HD -> to_list1 n1 } )
    (plunge List.TL; wmap{`List.TL -> to_list6 n2 n3 n4 n5 n6 n7} )
