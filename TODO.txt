THINGS TO DO

IMMEDIATE
think about Makefiles!
continue documenting interfaces (do 'make docs' in /src), 
  beginning with v.mli (which still probably has dead stuff in it)
think about whether the lambda-calculus part of focal should be strict or
  lazy (in particular, recursion)
fix 'make test' in /src so that it actually runs all tests automatically
why, again, do fork and friends take views, not types?
  - because I haven't gotten to changing it over --JNF
  - but we should do this, to get negation of views too... 

TIDYING
* make clean should remove the silly ._d directories from OCamlMakefile
* Add interface files with camldoc documentation for EVERY MODULE
* renaming: hoist becomes hoist_unique

CORE 
* Delete/delete conflicts should maybe be removed
* memoize equality checks

USER INTERFACE
* Improve printing of everything
* push synchronization down to atomic or equally changed
   -  more generally, tidy the sync algorithm

LENSES
* find or write external palm to XML parser and writer
* find or write external iCalendar to XML parser and writer
* Add Safari plugin
* Add the tests for plugins
* get calendar lenses (ICal, ICalendar and PalmDatebook) working again
   - deal correctly with alignment (via lenses)
   - move iCalendar handling into a separate program
   - use pilotlink for datebook handling
* new primitive:  hoistAny (which acts like hoist except that it doesn't
                    care what name the edge it's clipping out has; takes a
                    default name for the put case)

LOW PRIORITY
output to stdout option and input from stdin
sync visualizer: need to show output even in conflict cases

THINGS TO THINK ABOUT LATER
* check on funding possibilities for Harmony Eclipse plug-in 
* Check "Set-Oriented Transformers," Srivastava, DBPL 2001
* Write down ideas from work with Martin at POPL
* Another list encoding idea: translate list to set, noting position inside data
      List of a b c  ==>  { a = 1  b = 2  c = 3 }
* Contact Doug Terry and Make Dahlin (UT Austin) and check out their current
  related research.  

DOCUMENTATION
move installation instructions for tidy and lablgtk2 from src/INSTALL to elsewhere

____________________________________________________________________________
HARMONY SUMMER 2005 PLANS
=========================

Major issues: 
  - finding more easy demos
  - getting the implementation really going

Major topics:  
  * Finishing Focal compiler (Nate)
      - no more research on lenses right now!
      - performance tuning
      - (eventually, replace types backend with sheaves automata to support inter, diff)
  * Rewrite visualizers in Swing or as Emacs front-ends :-)
  * Simple(!) user interface
  * Unison integration
  * Many demos
      - easy ones: bookmarks (first); bibtex (XML only!); 
        simple structured text?; iTunes? generic HTML/XML? bibtex?
          - simple XML file formats
          - no alignment issues
          - no fancy lens primitives
          - modest amounts of data
      - hard ones: 
          - calendar (make alignment into a lens!) 
            check out IETF Calendaring and Scheduling Working Group!
            redo alignment stuff as lenses
            reimplement in Focal
            however: very probably better not to deal with non-XML data at all!
                     (conversion to and from XML should be an external process, and
                      Harmony itself should not help)
            GROUP calendar demo
          - address book (vcard-ish)
              - maybe including sync'ing with cell phones
          - but make sure these don't get on the critical path!
      - maybe some of the driver scripts should be written in Perl/Python
  * Packaging and configuration
      - no backups
  * Documentation
      - documentation of lenses should be generated from source code (both ocaml
        and focal)
