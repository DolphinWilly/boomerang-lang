THINGS TO DO

BCP TASKS
make conflict runs give 0 exit code unless a switch is set
fix the template directory
think about uniform demo conventions and polish all demos
  make a "playing with demos" section of the tutorial
structured text demo
  test implementation of third and fourth levels of nesting (last one using ALLCAPS)
  make an ML front end
make Plist a library module and experiment with syncing some real plists
move Thang's general concat into List module
the code in Registry that searches for files along the search path should
  also look in subdirectories
why does - not work as an output file for csv (but works for meta, e.g.)?
clean up printing mess!

NATE TASKS
  NOW
    fix meta
    centralize errors
    eliminate contractiveness tests?
    add docs to registry.mli and other compiler modules
    fix this printing problem:
          Native.Prelude.assert(get): view
                  [X, [A, b], [C]]
                        is not a member of ({hd = H, tl = T} | nil = {})
    (note the H and T in the last line...)
    This is really two things:
    (1) fix formatting of types (and everything else)
    and (2) have member print a better error message pinpointing the 
    view and type that made it fail.
  LATER
     make fork and friends take types

SOMEBODY
the printing/tracing/debugging stuff is still not working very well.  In
  particular, calls to Trace.debug produce some of their output on the
  stdout stream and some on stderr...!  
change implementation of sync alg to eliminate delete/delete conflicts,
  as discussed by Alan
assertion failure should print a line number
  - make native assert function take a string arg
  - make parser recognize assert keyword specially and supply fileinfo
    as string

STEPHANE
in Unison merge function, when we call out to the Harmony process, we need
  to capture both its stdout and its stderr.  Also, we may want to print
  them incrementally rather than waiting for the subprocess to exit

_________________________________________________________________________

BEFORE BIG RELEASE
put GPL notice in files
  make sure GPL is stated correctly for CSV module

FIRST RELEASE ANNOUNCEMENT LIST
Penn db group
Nathan Whitehead

PUBLIC RELEASE ANNOUNCEMENT LIST
Jerome Simeon
Alain Frisch
Peter Buneman
Tokyo people
Pascal Molli and group
Serge Abiteboul
Srivastava

__________________________________________________________________________

TIDYING
move papers, notes, old, etc. to a separate, private svn repository
* The Sync module exports a bunch of stuff that looks internal -- is it needed
  by the sync visualizer, perhaps?  Otherwise let's drop it.
* renaming: hoist becomes hoist_unique
* some of the options (logfile, addprefsto) don't make sense for Harmony

LENSES
* find or write external palm to XML parser and writer
* find or write external iCalendar to XML parser and writer
* get calendar lenses (ICal, ICalendar and PalmDatebook) working again
   - deal correctly with alignment (via lenses)
   - move iCalendar handling into a separate program
   - use pilotlink for datebook handling
* new primitive:  hoistAny (which acts like hoist except that it doesn't
                    care what name the edge it's clipping out has; takes a
                    default name for the put case)

SYNC ALGORITHM
* Improve printing of everything
* Delete/delete conflicts should maybe be removed
* memoize equality checks
* push synchronization down to atomic or equally changed
   -  more generally, tidy the sync algorithm

LOW PRIORITY
sync visualizer: need to show output even in conflict cases

THINGS TO THINK ABOUT LATER
* check on funding possibilities for Harmony Eclipse plug-in 
* Check "Set-Oriented Transformers," Srivastava, DBPL 2001
* Write down ideas from work with Martin at POPL
* Another list encoding idea: translate list to set, noting position inside data
      List of a b c  ==>  { a = 1  b = 2  c = 3 }
* Contact Doug Terry and Make Dahlin (UT Austin) and check out their current
  related research.  

DOCUMENTATION
move installation instructions for tidy and lablgtk2 from src/INSTALL to elsewhere
move src/INSTALL to top level

____________________________________________________________________________
NOTE FROM MICHAEL -- HAVE WE DEALT WITH THIS?

   > I meant to ask this before: In the new INSTALL instructions for
   > OSX QUICK START it says to 
   > "set (in Makefile.conf)
   >   export INCDIRS := /sw/include"
   > First, shouldn't it say "(in OCamlMakefile)" instead of
   > Makefile.conf?
   
   Don't think so -- OCamlMakefile is something imported from outside and we
   want to be able to overwrite it with newer versions.
   
OK.  There is no file Makefile.conf in harmony4/src, and I assume
the comment wasn't for Makefile.conf in pcre --- so into which
file should we put in "export INCDIRS ..." and "export LIBDIRS
..."?  (I know what needs to be done, I just don't know where it
should be done).

____________________________________________________________________________
HARMONY SUMMER 2005 PLANS
=========================

Major issues: 
  - finding more easy demos
  - getting the implementation really going

Major topics:  
  * Finishing Focal compiler (Nate)
      - no more research on lenses right now!
      - performance tuning
      - (eventually, replace types backend with sheaves automata to support inter, diff)
  * Rewrite visualizers in Swing or as Emacs front-ends :-)
  * Simple(!) user interface
  * Unison integration
  * Many demos
      - easy ones: bookmarks (first); bibtex (XML only!); 
        simple structured text?; iTunes? generic HTML/XML? bibtex?
          - simple XML file formats
          - no alignment issues
          - no fancy lens primitives
          - modest amounts of data
      - hard ones: 
          - calendar (make alignment into a lens!) 
            check out IETF Calendaring and Scheduling Working Group!
            redo alignment stuff as lenses
            reimplement in Focal
            however: very probably better not to deal with non-XML data at all!
                     (conversion to and from XML should be an external process, and
                      Harmony itself should not help)
            GROUP calendar demo
          - address book (vcard-ish)
              - maybe including sync'ing with cell phones
          - but make sure these don't get on the critical path!
      - maybe some of the driver scripts should be written in Perl/Python
  * Packaging and configuration
      - no backups
  * Documentation
      - documentation of lenses should be generated from source code (both ocaml
        and focal)
