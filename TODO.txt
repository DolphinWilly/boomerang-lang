THINGS TO DO

BCP TASKS
change "split" to "lines" and "invert" to "inverse"
move flatten and friends to list.src
continue with prelude.src and friends
look at address book stuff and reintegrate
work with stephane on unison integration
finish structured text demo (integrate spinelists) after nate's new types
examples/experimental Makefiles should calculate subdirs
make Plist a library module and experiment with syncing some real plists
put GPL notice in files
  and download/read instructions on getting copyright transfer
finish title page (discuss)

NATE TASKS
why, again, do fork and friends take views, not types?
  - because I haven't gotten to changing it over --JNF
    but we should do this, to get negation of views too... 
add docs to registry.mli and other compiler modules
fix this printing problem:
      Native.Prelude.assert(get): view
        [X, [A, b], [C]]
      is not a member of ({hd = H, tl = T} | nil = {})
  (note the H and T in the last line...)
delete old (uncurried) concrete syntax of put tests

INITIAL RELEASE (TO SOME SUBSET OF...)
Miles Sabin <miles@milessabin.com>
Alain Frisch
Geoff
LATER?
Jerome Simeon

------------

SOON
* add typechecking tests to the parser?
* make 'make test' *stop* if any errors are encountered in subdirs

TIDYING
* We should move all the primitive list-handling lenses out of Prelude and
  into List
* The Sync module exports a bunch of stuff that looks internal -- is it needed
  by the sync visualizer, perhaps?  Otherwise let's drop it.
* renaming: hoist becomes hoist_unique

LENSES
* find or write external palm to XML parser and writer
* find or write external iCalendar to XML parser and writer
* get calendar lenses (ICal, ICalendar and PalmDatebook) working again
   - deal correctly with alignment (via lenses)
   - move iCalendar handling into a separate program
   - use pilotlink for datebook handling
* new primitive:  hoistAny (which acts like hoist except that it doesn't
                    care what name the edge it's clipping out has; takes a
                    default name for the put case)

SYNC ALGORITHM
* Improve printing of everything
* Delete/delete conflicts should maybe be removed
* memoize equality checks
* push synchronization down to atomic or equally changed
   -  more generally, tidy the sync algorithm

LOW PRIORITY
output to stdout option and input from stdin
sync visualizer: need to show output even in conflict cases

THINGS TO THINK ABOUT LATER
* check on funding possibilities for Harmony Eclipse plug-in 
* Check "Set-Oriented Transformers," Srivastava, DBPL 2001
* Write down ideas from work with Martin at POPL
* Another list encoding idea: translate list to set, noting position inside data
      List of a b c  ==>  { a = 1  b = 2  c = 3 }
* Contact Doug Terry and Make Dahlin (UT Austin) and check out their current
  related research.  

DOCUMENTATION
move installation instructions for tidy and lablgtk2 from src/INSTALL to elsewhere
move src/INSTALL to top level

____________________________________________________________________________
NOTE FROM MICHAEL -- HAVE WE DEALT WITH THIS?

   > I meant to ask this before: In the new INSTALL instructions for
   > OSX QUICK START it says to 
   > "set (in Makefile.conf)
   >   export INCDIRS := /sw/include"
   > First, shouldn't it say "(in OCamlMakefile)" instead of
   > Makefile.conf?
   
   Don't think so -- OCamlMakefile is something imported from outside and we
   want to be able to overwrite it with newer versions.
   
OK.  There is no file Makefile.conf in harmony4/src, and I assume
the comment wasn't for Makefile.conf in pcre --- so into which
file should we put in "export INCDIRS ..." and "export LIBDIRS
..."?  (I know what needs to be done, I just don't know where it
should be done).

____________________________________________________________________________
HARMONY SUMMER 2005 PLANS
=========================

Major issues: 
  - finding more easy demos
  - getting the implementation really going

Major topics:  
  * Finishing Focal compiler (Nate)
      - no more research on lenses right now!
      - performance tuning
      - (eventually, replace types backend with sheaves automata to support inter, diff)
  * Rewrite visualizers in Swing or as Emacs front-ends :-)
  * Simple(!) user interface
  * Unison integration
  * Many demos
      - easy ones: bookmarks (first); bibtex (XML only!); 
        simple structured text?; iTunes? generic HTML/XML? bibtex?
          - simple XML file formats
          - no alignment issues
          - no fancy lens primitives
          - modest amounts of data
      - hard ones: 
          - calendar (make alignment into a lens!) 
            check out IETF Calendaring and Scheduling Working Group!
            redo alignment stuff as lenses
            reimplement in Focal
            however: very probably better not to deal with non-XML data at all!
                     (conversion to and from XML should be an external process, and
                      Harmony itself should not help)
            GROUP calendar demo
          - address book (vcard-ish)
              - maybe including sync'ing with cell phones
          - but make sure these don't get on the critical path!
      - maybe some of the driver scripts should be written in Perl/Python
  * Packaging and configuration
      - no backups
  * Documentation
      - documentation of lenses should be generated from source code (both ocaml
        and focal)
