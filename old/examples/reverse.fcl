(* Snoc of the paper (adapted for the atomic tag) *)
let snoc m =
 let rec snoc_aux =
  acond (equalDom {m *}) (child *t isEmptyList)
   (add *t {*};rename m *h)
   (xfork {m *t} {*t}
     (hoist_nonunique *t {*h *t *};
      snoc_aux;
      plunge *t)
     id)
 in snoc_aux

(* Reverse of the paper *)
let rec reverse =
 acond isEmptyList isEmptyList
  id
  (rename *h x;
   hoist_nonunique * {};
   hoist_nonunique *t {*h *t *};
   fork {*h *t *} reverse id;
   snoc x)

let rec rotate =
  acond (union (child *t (equalDom {*})) isEmptyList) (union (child *t (equalDom {*})) isEmptyList)
   id
   (rename *h *x;
    hoist_nonunique * {};
    hoist_nonunique *t {*h * *t};
    xfork {*x *t *} {*t}
     (rename *x *h;
      rotate;
      plunge *t)
     (add * {}))

let rec list_reverse =
 wmap < *t -> list_reverse >;rotate

do reverse

