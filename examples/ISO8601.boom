module ISO8601 =

  let PLUSMINUS = "+" | "-"

  module Date =

  let Y = [0-9]
  let MM = ('0' . [1-9]) | "11" | "12"
  let DD = ([012] . [1-9]) | "30" | "31"

  let SEP = "-"

  (***********************)
  (* 4.1.2 Calendar date *)
  (***********************)

  (* 4.1.2.2 Complete representations *)
  let DATE (sep:regexp) = Y{4} . sep . MM . sep . DD
  let BASIC = DATE ""
  let EXTENDED = DATE SEP
  let COMPLETE = DATE SEP?

  test "19850412"   : (string in COMPLETE)
  test "1985-04-12" : (string in COMPLETE)
  test "19850412"   : (string in BASIC)
  test "1985-04-12" : (string in EXTENDED)

  (* 4.1.2.3 Representations with reduced accuracy

     ...two, four or six digits may be omitted, the omission starting
     from the extreme right-hand side. The resulting representation
     will then indicate a month, a year or a century, as set out
     below. When only [DD] is omitted, a separator shall be inserted
     between [YYYY] and [MM], but separators shall not be used in the
     other representations with reduced accuracy.

  *)
  let REDUCED = Y{2} . (Y{2} . (SEP . MM)?)?

  test "1984-04" : (string in REDUCED)
  test "1984"    : (string in REDUCED)
  test "19"      : (string in REDUCED)

  (* 4.1.2.4 Expanded representations *)

  let EXPAND (YS : regexp where subset YS Y+) (FMT : regexp) =
    PLUSMINUS . YS . FMT

  let EXPANDED_COMPLETE (YS : regexp where subset YS Y+) = EXPAND YS COMPLETE

  let EXPANDED_REDUCED (YS : regexp where subset YS Y+) = EXPAND YS REDUCED

  let EXPANDED (YS : regexp where subset YS Y+) =
    EXPANDED_COMPLETE YS | EXPANDED_REDUCED YS

  test "+0019850412"   : (string in EXPANDED Y{2})
  test "+001985-04-12" : (string in EXPANDED Y{2})
  test "+0019850412"   : (string in EXPANDED_COMPLETE Y{2})
  test "+001985-04-12" : (string in EXPANDED_COMPLETE Y{2})
  test "+001985-04"    : (string in EXPANDED Y{2})
  test "+001985"       : (string in EXPANDED Y{2})
  test "+0019"         : (string in EXPANDED Y{2})
  test "+001985-04"    : (string in EXPANDED_REDUCED Y{2})
  test "+001985"       : (string in EXPANDED_REDUCED Y{2})
  test "+0019"         : (string in EXPANDED_REDUCED Y{2})

  (**********************)
  (* 4.1.2 Ordinal date *)
  (**********************)

  (* Table 1: Calendar months and ordinal days

     Calendar month Calendar month Number of days in Ordinal dates of the days in Ordinal dates of the
         number          name          the month           common years           days in leap years
           01           January            31                  001-031                 001-031
           02          February            28 (29 leap year)   032-059                 032-060
           03            March             31                  060-090                 061-091
           04            April             30                  091-120                 092-121
           05             May              31                  121-151                 122-152
           06            June              30                  152-181                 153-182
           07             July             31                  182-212                 183-213
           08           August             31                  213-243                 214-244
           09         September            30                  244-273                 245-274
           10           October            31                  274-304                 275-305
           11          November            30                  305-334                 306-335
           12          December            31                  335-365                 336-366
  *)

  (* ordinal days *)
  let DDD = [0-2] . [0-9]{2} | '3' . ([0-5] . [0-9] | '6' . [0-6])

  test "001" : (string in DDD)
  test "365" : (string in DDD)
  test "366" : (string in DDD)

  let ODATE (sep:regexp) =
    Y{4} . sep . DDD
  let OBASIC = ODATE ""
  let OEXTENDED = ODATE SEP
  let OCOMPLETE = ODATE SEP?

  test "1985102"  : (string in OCOMPLETE)
  test "1985-102" : (string in OCOMPLETE)
  test "1985102"  : (string in OBASIC)
  test "1985-102" : (string in OEXTENDED)

  (* There is no reduced represenation for ordinal dates --- they'd be
     same as the year-only reduced representations of calendar dates. *)

  (* 4.1.3.3 Expanded representations *)

  let OEXPANDED (YS : regexp where subset YS Y+) = EXPAND YS OCOMPLETE

  test "+001985102"  : (string in OEXPANDED Y{2})
  test "+001985-102" : (string in OEXPANDED Y{2})

  (*******************)
  (* 4.1.4 Week date *)
  (*******************)

  (* calendar week numbers *)
  (* years have 52 or 53 weeks *)
  let Www = 'W' . ([0-4] . [0-9] | '5' . [0-3])

  (* Table 2: Calendar days
  
     Ordinal day number in  Calendar day name	  
           the week
               1                Monday
               2                Tuesday
               3                Wednesday
               4                Thursday
               5                Friday
               6                Saturday
               7                Sunday
  
     What a bunch of anti-Semites -- Sunday is the first day of the
     week!
  *)

  (* ordinal day numbers *)
  let D = [1-7]

  (* 4.1.4.2 Complete representations *)

  let WDATE (sep:regexp) =
    Y{4} . sep . Www . sep . D
  let WBASIC = WDATE ""
  let WEXTENDED = WDATE SEP
  let WCOMPLETE = WDATE SEP?

  test "1985W155"   : (string in WCOMPLETE)
  test "1985-W15-5" : (string in WCOMPLETE)
  test "1985W155"   : (string in WBASIC)
  test "1985-W15-5" : (string in WEXTENDED)

  (* 4.1.4.3 Representations with reduced accuracy *)

  let WREDUCED = Y{4} . SEP? . Www
  test "1985W15"  : (string in WREDUCED)
  test "1985-W15" : (string in WREDUCED)

  (* 4.1.4.4 Expanded representations *)

  let WEXPANDED_COMPLETE (YS : regexp where subset YS Y+) =
    EXPAND YS WCOMPLETE

  let WEXPANDED_REDUCED (YS : regexp where subset YS Y+) =
    EXPAND YS WREDUCED

  let WEXPANDED (YS : regexp where subset YS Y+) =
    WEXPANDED_COMPLETE YS | WEXPANDED_REDUCED YS

  test "+001985W155"   : (string in WEXPANDED Y{2})
  test "+001985-W15-5" : (string in WEXPANDED Y{2})
  test "+001985W155"   : (string in WEXPANDED_COMPLETE Y{2})
  test "+001985-W15-5" : (string in WEXPANDED_COMPLETE Y{2})
  test "+001985W15"    : (string in WEXPANDED Y{2})
  test "+001985-W15"   : (string in WEXPANDED Y{2})
  test "+001985W15"    : (string in WEXPANDED_REDUCED Y{2})
  test "+001985-W15"   : (string in WEXPANDED_REDUCED Y{2})

  end


