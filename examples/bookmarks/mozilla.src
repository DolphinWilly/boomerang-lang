#{#}

module Mozilla =

  schema CFolder = [{"H3" = Any },{"DL" = Any}]
  let item : lens = 
    hoist "DT";
    hoist Xml.CHILDREN;
    acond CFolder Bookmarks.Folder
      (protect (folder))
      (protect (link))

  and folder : lens = 
    hoist_nonunique List.HD { "H3" };
    rename "H3" "name";
    hoist_nonunique List.TL { `List.HD, `List.TL };
    xfork { `List.HD, `List.TL } { "contents" }      
      (focus List.HD { `List.TL=[] }; rename "DL" "contents")
      id;
    
    wmap { "name" ->  focus Xml.CHILDREN {}; List.hd []; hoist Xml.PCDATA,
             "contents" -> hoist Xml.CHILDREN; List.map item }
      
  and link : lens = 
    List.hd [];
    rename "A" "link";
    wmap { "link" ->
             (xfork { `Xml.CHILDREN, "HREF" } { "name", "url" }
                (rename "HREF" "url";
                 fork {"url"} id                   
                   (focus Xml.CHILDREN {};List.hd []; rename Xml.PCDATA "name"))
                (const {} {})) }
      
  let l : lens = 
    List.hd [];
    hoist "DT";    
    hoist Xml.CHILDREN;
    List.tl { "H1" = { `Xml.CHILDREN = [{`Xml.PCDATA = {Bookmarks}}]}};
    List.hd [];
    hoist "DL";
    hoist Xml.CHILDREN;
    List.map item;
    Bookmarks.rename_bookmarksbar
