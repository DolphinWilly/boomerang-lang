module Units = 

(* ---- dup --- *)
test get (dup1 (copy [A-Z]) (get (copy [A-Z])) [A-Z]) "N" = "NN"
test get (dup2 (copy [A-Z]) (get (copy [A-Z])) [A-Z]) "N" = "NN"
test create (dup1 (copy [A-Z]) (get (copy [A-Z])) [A-Z]) "NM" = "N"
test create (dup2 (copy [A-Z]) (get (copy [A-Z])) [A-Z]) "NM" = "M"

(* permute *)
let l : lens = 
  permute
    #{int}[1;0;2] 
    #{lens}[copy [A-Z];key [0-9]; copy [a-z]]

test ctype l = ([A-Z] . [0-9] . [a-z])
test atype l = ([0-9] . [A-Z] . [a-z])
test l.get "A5z" = "A5z"
test l.create "0Az" = "A0z"

(* sort *)
let q : canonizer = sort #{regexp}[[0-9];[A-Z];[a-z]]

test canonize q "f7N" = "7Nf"
