#{*}
(*******************************************************************************)
(* The Harmony Project                                                         *)
(* harmony@lists.seas.upenn.edu                                                *)
(*******************************************************************************)
(* Copyright (C) 2007 J. Nathan Foster and Benjamin C. Pierce                  *)
(*                                                                             *)
(* This library is free software; you can redistribute it and/or               *)
(* modify it under the terms of the GNU Lesser General Public                  *)
(* License as published by the Free Software Foundation; either                *)
(* version 2.1 of the License, or (at your option) any later version.          *)
(*                                                                             *)
(* This library is distributed in the hope that it will be useful,             *)
(* but WITHOUT ANY WARRANTY; without even the implied warranty of              *)
(* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU           *)
(* Lesser General Public License for more details.                             *)
(*******************************************************************************)
(* /boomerang/examples/outline.boom                                            *)
(* Structured text lens                                                        *)
(* $Id$ *)
(*******************************************************************************)

module Outline = 

let CONTENT : regexp = 
  (ANYCHAR - [\n])*

let MARKER : string = "* "

let header : lens =
  MARKER . key CONTENT

let nonheader : lens = 
  key (CONTENT - (MARKER . CONTENT))

let section : lens = 
    header . "\n"
  . (<paragraph:nonheader> . "\n")*

let doc : lens = 
  <section:section>*

let sample_doc : string = 
  <<
    * FOO
    bar
    * BAZ
    quux

  >> 

test doc.get sample_doc = sample_doc
    
test 
begin 
  let acts,_,_,_ = 
    sync doc
      <<
        * ABSTRACT
        some stuff
        some more stuff
        * INTRODUCTION
        boomerang is pretty dang sweet.
        
      >>
      
      <<
        * ABSTRACT
        some stuff
        * INTRODUCTION
        boomerang is pretty darn sweet.
        it works on strings.
        * CONCLUSION
        let's have a summary.  
      
      >>
      
      <<
        * ABSTRACT
        some stuff
        * INTRODUCTION
        boomerang is pretty darn sweet.
        it works on strings.
        
      >> in 
  acts 
end 
= 
<<
  A & B deleted key at [:section/ABSTRACT:paragraph/"some more stuff"]
  A & B deleted key at [:section/INTRODUCTION:paragraph/"boomerang is pretty dang sweet."]
  A & B added   key at [:section/INTRODUCTION:paragraph/"boomerang is pretty darn sweet."]
  A & B added   key at [:section/INTRODUCTION:paragraph/"it works on strings."]
  A     added   key at [:section/CONCLUSION]

>>
