(******************************************************************************)
(* The Harmony Project                                                        *)
(* harmony@lists.seas.upenn.edu                                               *)
(******************************************************************************)
(* Copyright (C) 2009                                                         *)
(* J. Nathan Foster and Benjamin C. Pierce                                    *)
(*                                                                            *)
(* This library is free software; you can redistribute it and/or              *)
(* modify it under the terms of the GNU Lesser General Public                 *)
(* License as published by the Free Software Foundation; either               *)
(* version 2.1 of the License, or (at your option) any later version.         *)
(*                                                                            *)
(* This library is distributed in the hope that it will be useful,            *)
(* but WITHOUT ANY WARRANTY; without even the implied warranty of             *)
(* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU          *)
(* Lesser General Public License for more details.                            *)
(******************************************************************************)
(* /lenses/prefs.boom                                                         *)
(* Handle arguments for the main function                                     *)
(* $Id$ *)
(******************************************************************************)

module Prefs =

#{@}

\section{Command line parsing}

#* let getProgName : unit -> string
## = Native.Prelude.prefsGetProgName

\LENSSECTION{@createBool@} @createBool name default doc fulldoc@
creates a preference such that if @-name@ is present in the command
line, then the value will be @true@.  If @-name=false@ is present in
the command line then the value will be @false@.

#* let createBool : string -> bool -> string -> string -> boolPrefs
## = Native.Prelude.prefsCreateBool

#* let readBool : boolPrefs -> bool
## = Native.Prelude.prefsReadBool

#* let createInt : string -> int -> string -> string -> intPrefs
## = Native.Prelude.prefsCreateInt

#* let readInt : intPrefs -> int
## = Native.Prelude.prefsReadInt

#* let createString : string -> string -> string -> string -> stringPrefs
## = Native.Prelude.prefsCreateString

#* let readString : stringPrefs -> string
## = Native.Prelude.prefsReadString

#* let createStringList : string -> string -> string -> stringListPrefs
## = Native.Prelude.prefsCreateStringList

#* let readStringList : stringListPrefs -> string List.t
## = Native.Prelude.prefsReadStringList
