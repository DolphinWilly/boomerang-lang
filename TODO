== BUILD == 

* add target for bytecode compilation (Nate)

== SYSTEM ==

* -check-only flag: don't compile and run, just check that base sorts
  line up.

* re-do lens printing entirely. 

* correctness wrt polymorphism and coercions:

  the following doesn't work if we change the return type of map to
  string or regexp -- should it?

    (* this function already existed inside escape, but we had to 
       pull it out *)
    let unescaped (escs : (char * string) List.t) : regexp =
      union_regexps (List.map{char * string}{char} fst{char}{string} escs)
    

== LIBRARIES == 

* Investigate other options for the contract on sorting.

* Work out standardized WS/WSP/NL* regexps

* Use escaping/xml in address.boom, wiki.boom (in needs-porting)

* Fix contract on q-lenses using crel/arel/cnrel.

== DOCUMENTATION ==

* Polish intro of manual.

* Add examples using q-lenses to QuickStart.

* Add description of sync.
