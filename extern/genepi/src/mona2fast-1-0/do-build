#! /bin/sh

# FAST Enhanced Release, an accelerated symbolic model-checker. 
# Copyright (C) 2005-2006 Jerome Leroux (coordinator), Sebastien Bardin, 
# Gerald Point and LaBRI, CNRS UMR 5800, Universite Bordeaux 1, ENSEIRB.
#
# FAST is free software; you can redistribute it and/or modify it under the 
# terms of the GNU General Public License as published by the Free Software 
# Foundation; either version 2, or (at your option) any later version.
#
# FAST  is distributed in the hope that it will be useful, but WITHOUT ANY 
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more 
# details.
#
# You should have received a copy of the GNU General Public License along with
#
# FAST; see the file COPYING.  If not, write to the Free Software Foundation, 
# 675 Mass Ave, Cambridge, MA 02139, USA.

#
# Program taken from the ARC project
#

# $Id: do-build,v 1.2 2006/03/17 08:21:52 point Exp $

build_basedir="./build"
from_scratch="no"
make_install="no"
make_distrib="no"
install_dir="$HOME/mvtsi-dev"
configure_args=""

TOLOWER="tr '[A-Z]' '[a-z]'"
cpu=`(uname -p 2>/dev/null || uname -m 2>/dev/null || echo unknown) | \
	${TOLOWER}`
os=`uname -s | ${TOLOWER}`

case "$cpu" in
    unknown)
	cpu=`uname -m | ${TOLOWER}` ;;
esac

while test $# -gt 0; do
   case "$1" in
       --install-dir) 
	   install_dir="$2"
	   if [ "x${install_dir}" = "x" ] ; then
	       echo "invalid installation directory '${install_dir}'"
	       exit 1
	   fi
	   shift
	   ;;
       --make-install)
	   make_install="yes"
	   ;;
       --scratch) 
	   from_scratch="yes"
	   ;;
       --make-distrib) 
	   make_distrib="yes"
	   ;;
       --quiet) 
	   configure_args="--quiet"
	   ;;
       --help)
	   echo "USAGE: $0 [options]"
	   echo "--help : print this help message."
	   echo "--install-dir dir : specify that the package must be installed in the directory 'dir'."
	   echo "--make-install : indicates that the program must execute a 'make install' after the compilation process."
	   echo "--make-distrib : indicates that the program must execute a 'make distrib' after the compilation process."
	   echo "--quiet : generates Makefile with '@' preventing verbose compilation."
	   echo "--scratch : configure the package from a newly created sub-directory."
	   exit 0
	   ;;

       *) 
	   echo >&2 invalid option "$1"
	   exit 1
	   ;;
   esac
   shift
done

test -d ${build_basedir} || mkdir ${build_basedir}
arch_name="${os}-${cpu}"
configure_args="${configure_args} --arch ${arch_name}"
configure_args="${configure_args} --install-dir ${install_dir}"
build_dir=${build_basedir}/${arch_name}

if test "${from_scratch}" = "yes" ; then
    rm -fr ${build_dir}
fi


test -d ${build_dir} || mkdir ${build_dir}

cp mona-1.4.7.tar.gz ${build_dir}
cd ${build_dir}
tar -zxf mona-1.4.7.tar.gz
cd mona-1.4
unset CC CFLAGS LDFLAGS CPPFLAGS CXX CXXFLAGS CPP LIBS
./configure --prefix ${install_dir} 
(cd DFA ; make; cp libdfa.a ${install_dir}/lib)
(cd BDD ; make; cp libbdd.a ${install_dir}/lib)
(cd Mem ; make; cp libmem.a ${install_dir}/lib)
cd ..

../../configure ${configure_args} || exit 1
make depend || rm -f .depend && make depend || exit 1
make
echo "Compilation terminated in directory ${build_dir}"

if [ "${make_install}" = "yes" ] ; then
    echo "Making installation into ${install_dir}"
    make install
fi

if [ "${make_distrib}" = "yes" ] ; then
    echo "Making distribution archive"
    make distrib
fi
