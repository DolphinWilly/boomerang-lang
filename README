HARMONY: A GENERIC SYNCHRONIZATION FRAMEWORK
============================================

OVERVIEW
-------

Increased reliance on optimistic data replication has led to
burgeoning interest in tools and frameworks for synchronizing
disconnected updates to replicated data.  To better understand the
issues underlying the design of generic and heterogeneous
synchronizers, we have implemented an experimental framework, called
Harmony, that can be used to build synchronizers for tree-structured
data stored in a variety of concrete formats, in particular XML.


COPYING
-------

Harmony is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2 of the License, or (at your
option) any later version.  See the file COPYING for more information.


GETTING STARTED
---------------

See the file src/INSTALL for instructions on how to build Harmony.

If you want to read over the code, here is one possible order to look at files: 
   src/v.mli                           basic definitions of trees (called "views")
   src/lens.mli                        basic definitions of lenses
   src/lib/native/prelude.ml           the most important primitive lenses
   src/lib/lenses/prelude.fcl          some important derived lenses
   examples/*                          lots of real-world lenses
   src/sync.ml                         the synchronization algorithm
   src/harmony.ml                      the top-level program

To understand what's going on in the code, you'll also want to have a
look at the papers describing lenses ("Combinators for bi-directional
tree transformations") and the overall synchronization architecture
("Bringing harmony to optimism"), which can be found via the Harmony
home page:

    http://www.cis.upenn.edu/~bcpierce/harmony

   
